# .github/workflows/ci-cd.yml
name: Node.js CI/CD

on:
  push:
    branches: [ master ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Send Telegram notification (Deploy started)
        if: always()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}" \
            -d parse_mode=Markdown
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendSticker \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d sticker="CAACAgQAAxkBAAMKZ_5Fikm9U1dAOff5x1z2RZIPd5UAAkoTAAIYdwlTeIN6-a2BPik2BA"

      - name: üîΩ Repozitoriyani clone qilish
        uses: actions/checkout@v4

      - name: üü¢ Node.js versiyasini o'rnatish
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Add host key (known_hosts)
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT || '22' }}" "${{ secrets.SERVER_HOST }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: üì¶ Paketlarni o‚Äòrnatish (CI)
        run: npm ci --omit=dev

      # - name: üèó Build (kerak bo‚Äòlsa yoqing)
      #   run: npm run build

      - name: üîé Debug (ixtiyoriy, nimalar borligini ko‚Äòrish)
        run: |
          pwd
          ls -la
          echo "---- dirs ----"
          find . -maxdepth 2 -type d -print

      - name: üì¶ Pack release (tar.gz) - /tmp ga yozamiz
        run: |
          TAR_PATH="${RUNNER_TEMP}/release.tar.gz"
          tar \
            --exclude='./node_modules' \
            --exclude='./.git' \
            --exclude='./.github' \
            --exclude='./*.log' \
            --exclude='./release.tar.gz' \
            -czf "${TAR_PATH}" .
          ls -lh "${TAR_PATH}"

      - name: üìÅ Serverda target papkani yaratish
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}   # root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script: |
            mkdir -p /root/ming-chinor

      - name: üì§ Tarballni serverga yuborish (SCP)
        if: github.ref == 'refs/heads/master'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}   # root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          # Absolyut yo'ldagi faylni yuboramiz:
          source: "${{ runner.temp }}/release.tar.gz"
          target: "/root/ming-chinor"

      - name: üîÅ Serverda extract + PM2 restart
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}   # root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script: |
            set -e
            cd /root/ming-chinor

            # Tarballni yozib chiqaramiz
            tar xzf release.tar.gz
            rm -f release.tar.gz

            # PM2 bor-yo'qligini tekshirish
            command -v pm2 >/dev/null 2>&1 || npm i -g pm2

            # Prod dependency
            npm ci --omit=dev

            # .env serverda bo‚Äòlishi kerak
            if [ ! -f .env ]; then echo "‚ö†Ô∏è .env topilmadi (serverda bo‚Äòlishi kerak)"; fi

            # PM2 restart
            pm2 delete ming-chinor || true
            pm2 start npm --name ming-chinor -- run start
            pm2 save

      - name: Telegram Notify (Success)
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ *Node.js deploy MUVAFFAQIYATLI tugadi!* üöÄ%0A%0Aüìù *Commit:* _${{ github.event.head_commit.message }}_" \
            -d parse_mode=Markdown
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendAnimation \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d animation="CAACAgIAAxkBAANJaBB77sVqHSUQUHiN1aueq7uhvJoAAjsPAAKzG_hJvpDMSwABF75jNgQ" \
            -d caption="üéâ *Deploy muvaffaqiyatli yakunlandi!*" \
            -d parse_mode=Markdown

      - name: Send Telegram notification (Failure)
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ùå *Node.js deploy MUVAFFAQIYATSIZ tugadi!* üöÄ%0A%0Aüìù *Commit:* _${{ github.event.head_commit.message }}_" \
            -d parse_mode=Markdown
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendSticker \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d sticker="CAACAgQAAxkBAAMGZ_4K_bLdPd7eaMUGv4OeC_kqDn4AAuYTAAKAq8BTiVm6hOs4-pk2BA"
